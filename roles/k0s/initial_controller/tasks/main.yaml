- name: Check if the controller already exists
  stat:
    path: /etc/systemd/system/k0scontroller.service
  register: controller_unit

- name: Create k0s initial controller service
  command: k0s install controller --config {{ k0s_config_dir }}/k0s.yaml
  register: install_initial_controller_cmd
  changed_when: install_initial_controller_cmd | length > 0
  when: controller_unit.stat.exists == False

- debug:
    msg: Controller already set up
  when: controller_unit.stat.exists

- name: Start and enable k0scontroller
  systemd:
    name: k0scontroller
    state: started
    enabled: yes
    daemon_reload: yes

- name: Allow traffic to kube-apiserver
  ufw:
    rule: allow
    proto: tcp
    port: 6443

- name: Allow traffic to kubelet
  ufw:
    rule: allow
    proto: tcp
    port: 10250

- name: Wait for k8s apiserver
  wait_for:
    host: localhost
    port: 6443
    timeout: 180

- name: Create controller join token
  command: k0s token create --role controller
  register: controller_join_token
  changed_when: controller_join_token | length > 0

- name: Store controller join token
  set_fact:
    join_token_controller: "{{ controller_join_token.stdout }}"
    cacheable: yes

- name: Create worker join token
  command: k0s token create --role worker
  register: worker_join_token
  changed_when: worker_join_token | length > 0

- name: Store worker join token
  set_fact:
    join_token_worker: "{{ worker_join_token.stdout }}"
    cacheable: yes

- name: Copy config file to temporary directory
  copy:
    src: "{{ k0s_data_dir }}/pki/admin.conf"
    dest: /tmp/k0s-kubeconfig.yml
    remote_src: yes
    owner: root
    mode: 0644

- name: Set controller IP in kubeconfig
  replace:
    path: /tmp/k0s-kubeconfig.yml
    regexp: localhost
    replace: controller.starchild.network

- name: Set cluster name in kubeconfig
  replace:
    path: /tmp/k0s-kubeconfig.yml
    regexp: local
    replace: starlake

- name: Copy kubeconfig
  fetch:
    src: /tmp/k0s-kubeconfig.yml
    dest: k0s-kubeconfig.yml
    flat: yes
